# Generated from Kafe_Grammar.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,82,602,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,
        1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,
        1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,
        1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,
        1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,
        1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,
        1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,
        1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,
        1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,
        1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,
        1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,54,
        1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,
        1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,66,
        1,66,1,66,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,69,
        1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,
        1,72,1,72,1,72,1,72,5,72,513,8,72,10,72,12,72,516,9,72,1,72,1,72,
        1,73,1,73,1,73,1,73,5,73,524,8,73,10,73,12,73,527,9,73,1,73,1,73,
        1,73,1,73,1,73,1,74,4,74,535,8,74,11,74,12,74,536,1,75,1,75,1,75,
        1,75,1,75,1,75,1,75,1,75,1,75,3,75,548,8,75,1,76,4,76,551,8,76,11,
        76,12,76,552,1,76,1,76,4,76,557,8,76,11,76,12,76,558,1,77,1,77,5,
        77,563,8,77,10,77,12,77,566,9,77,1,77,1,77,1,77,5,77,571,8,77,10,
        77,12,77,574,9,77,1,77,3,77,577,8,77,1,78,1,78,1,78,1,78,1,78,1,
        79,1,79,1,79,1,79,1,79,1,80,1,80,5,80,591,8,80,10,80,12,80,594,9,
        80,1,81,4,81,597,8,81,11,81,12,81,598,1,81,1,81,3,525,564,572,0,
        82,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
        24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
        35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
        46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,
        56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,
        131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,
        75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,1,0,5,2,0,10,
        10,13,13,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
        97,122,3,0,9,10,13,13,32,32,612,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
        0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
        0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
        0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,
        0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,
        0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
        0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,
        0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,
        0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
        0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,
        0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
        0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,
        115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
        0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,
        1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,
        0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,
        0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,
        161,1,0,0,0,0,163,1,0,0,0,1,165,1,0,0,0,3,171,1,0,0,0,5,175,1,0,
        0,0,7,178,1,0,0,0,9,185,1,0,0,0,11,193,1,0,0,0,13,201,1,0,0,0,15,
        208,1,0,0,0,17,214,1,0,0,0,19,221,1,0,0,0,21,233,1,0,0,0,23,244,
        1,0,0,0,25,252,1,0,0,0,27,257,1,0,0,0,29,268,1,0,0,0,31,273,1,0,
        0,0,33,278,1,0,0,0,35,283,1,0,0,0,37,288,1,0,0,0,39,293,1,0,0,0,
        41,304,1,0,0,0,43,315,1,0,0,0,45,324,1,0,0,0,47,328,1,0,0,0,49,334,
        1,0,0,0,51,338,1,0,0,0,53,343,1,0,0,0,55,348,1,0,0,0,57,353,1,0,
        0,0,59,358,1,0,0,0,61,365,1,0,0,0,63,368,1,0,0,0,65,373,1,0,0,0,
        67,378,1,0,0,0,69,384,1,0,0,0,71,389,1,0,0,0,73,396,1,0,0,0,75,402,
        1,0,0,0,77,406,1,0,0,0,79,413,1,0,0,0,81,420,1,0,0,0,83,422,1,0,
        0,0,85,424,1,0,0,0,87,426,1,0,0,0,89,428,1,0,0,0,91,430,1,0,0,0,
        93,432,1,0,0,0,95,435,1,0,0,0,97,438,1,0,0,0,99,441,1,0,0,0,101,
        444,1,0,0,0,103,446,1,0,0,0,105,448,1,0,0,0,107,451,1,0,0,0,109,
        454,1,0,0,0,111,457,1,0,0,0,113,459,1,0,0,0,115,461,1,0,0,0,117,
        463,1,0,0,0,119,465,1,0,0,0,121,467,1,0,0,0,123,469,1,0,0,0,125,
        471,1,0,0,0,127,473,1,0,0,0,129,475,1,0,0,0,131,477,1,0,0,0,133,
        479,1,0,0,0,135,484,1,0,0,0,137,488,1,0,0,0,139,494,1,0,0,0,141,
        499,1,0,0,0,143,504,1,0,0,0,145,508,1,0,0,0,147,519,1,0,0,0,149,
        534,1,0,0,0,151,547,1,0,0,0,153,550,1,0,0,0,155,576,1,0,0,0,157,
        578,1,0,0,0,159,583,1,0,0,0,161,588,1,0,0,0,163,596,1,0,0,0,165,
        166,5,119,0,0,166,167,5,104,0,0,167,168,5,105,0,0,168,169,5,108,
        0,0,169,170,5,101,0,0,170,2,1,0,0,0,171,172,5,102,0,0,172,173,5,
        111,0,0,173,174,5,114,0,0,174,4,1,0,0,0,175,176,5,105,0,0,176,177,
        5,110,0,0,177,6,1,0,0,0,178,179,5,46,0,0,179,180,5,103,0,0,180,181,
        5,114,0,0,181,182,5,97,0,0,182,183,5,112,0,0,183,184,5,104,0,0,184,
        8,1,0,0,0,185,186,5,46,0,0,186,187,5,120,0,0,187,188,5,108,0,0,188,
        189,5,97,0,0,189,190,5,98,0,0,190,191,5,101,0,0,191,192,5,108,0,
        0,192,10,1,0,0,0,193,194,5,46,0,0,194,195,5,121,0,0,195,196,5,108,
        0,0,196,197,5,97,0,0,197,198,5,98,0,0,198,199,5,101,0,0,199,200,
        5,108,0,0,200,12,1,0,0,0,201,202,5,46,0,0,202,203,5,116,0,0,203,
        204,5,105,0,0,204,205,5,116,0,0,205,206,5,108,0,0,206,207,5,101,
        0,0,207,14,1,0,0,0,208,209,5,46,0,0,209,210,5,103,0,0,210,211,5,
        114,0,0,211,212,5,105,0,0,212,213,5,100,0,0,213,16,1,0,0,0,214,215,
        5,46,0,0,215,216,5,99,0,0,216,217,5,111,0,0,217,218,5,108,0,0,218,
        219,5,111,0,0,219,220,5,114,0,0,220,18,1,0,0,0,221,222,5,46,0,0,
        222,223,5,112,0,0,223,224,5,111,0,0,224,225,5,105,0,0,225,226,5,
        110,0,0,226,227,5,116,0,0,227,228,5,67,0,0,228,229,5,111,0,0,229,
        230,5,108,0,0,230,231,5,111,0,0,231,232,5,114,0,0,232,20,1,0,0,0,
        233,234,5,46,0,0,234,235,5,112,0,0,235,236,5,111,0,0,236,237,5,105,
        0,0,237,238,5,110,0,0,238,239,5,116,0,0,239,240,5,83,0,0,240,241,
        5,105,0,0,241,242,5,122,0,0,242,243,5,101,0,0,243,22,1,0,0,0,244,
        245,5,46,0,0,245,246,5,108,0,0,246,247,5,101,0,0,247,248,5,103,0,
        0,248,249,5,101,0,0,249,250,5,110,0,0,250,251,5,100,0,0,251,24,1,
        0,0,0,252,253,5,46,0,0,253,254,5,98,0,0,254,255,5,97,0,0,255,256,
        5,114,0,0,256,26,1,0,0,0,257,258,5,46,0,0,258,259,5,98,0,0,259,260,
        5,97,0,0,260,261,5,114,0,0,261,262,5,86,0,0,262,263,5,97,0,0,263,
        264,5,108,0,0,264,265,5,117,0,0,265,266,5,101,0,0,266,267,5,115,
        0,0,267,28,1,0,0,0,268,269,5,46,0,0,269,270,5,112,0,0,270,271,5,
        105,0,0,271,272,5,101,0,0,272,30,1,0,0,0,273,274,5,46,0,0,274,275,
        5,97,0,0,275,276,5,100,0,0,276,277,5,100,0,0,277,32,1,0,0,0,278,
        279,5,46,0,0,279,280,5,115,0,0,280,281,5,117,0,0,281,282,5,98,0,
        0,282,34,1,0,0,0,283,284,5,46,0,0,284,285,5,109,0,0,285,286,5,117,
        0,0,286,287,5,108,0,0,287,36,1,0,0,0,288,289,5,46,0,0,289,290,5,
        105,0,0,290,291,5,110,0,0,291,292,5,118,0,0,292,38,1,0,0,0,293,294,
        5,46,0,0,294,295,5,116,0,0,295,296,5,114,0,0,296,297,5,97,0,0,297,
        298,5,110,0,0,298,299,5,115,0,0,299,300,5,112,0,0,300,301,5,111,
        0,0,301,302,5,115,0,0,302,303,5,101,0,0,303,40,1,0,0,0,304,305,5,
        102,0,0,305,306,5,105,0,0,306,307,5,108,0,0,307,308,5,101,0,0,308,
        309,5,115,0,0,309,310,5,46,0,0,310,311,5,111,0,0,311,312,5,112,0,
        0,312,313,5,101,0,0,313,314,5,110,0,0,314,42,1,0,0,0,315,316,5,109,
        0,0,316,317,5,97,0,0,317,318,5,116,0,0,318,319,5,104,0,0,319,320,
        5,46,0,0,320,321,5,115,0,0,321,322,5,105,0,0,322,323,5,110,0,0,323,
        44,1,0,0,0,324,325,5,105,0,0,325,326,5,110,0,0,326,327,5,116,0,0,
        327,46,1,0,0,0,328,329,5,102,0,0,329,330,5,108,0,0,330,331,5,111,
        0,0,331,332,5,97,0,0,332,333,5,116,0,0,333,48,1,0,0,0,334,335,5,
        115,0,0,335,336,5,116,0,0,336,337,5,114,0,0,337,50,1,0,0,0,338,339,
        5,98,0,0,339,340,5,111,0,0,340,341,5,111,0,0,341,342,5,108,0,0,342,
        52,1,0,0,0,343,344,5,100,0,0,344,345,5,114,0,0,345,346,5,105,0,0,
        346,347,5,112,0,0,347,54,1,0,0,0,348,349,5,112,0,0,349,350,5,111,
        0,0,350,351,5,117,0,0,351,352,5,114,0,0,352,56,1,0,0,0,353,354,5,
        115,0,0,354,355,5,104,0,0,355,356,5,111,0,0,356,357,5,119,0,0,357,
        58,1,0,0,0,358,359,5,114,0,0,359,360,5,101,0,0,360,361,5,116,0,0,
        361,362,5,117,0,0,362,363,5,114,0,0,363,364,5,110,0,0,364,60,1,0,
        0,0,365,366,5,105,0,0,366,367,5,102,0,0,367,62,1,0,0,0,368,369,5,
        101,0,0,369,370,5,108,0,0,370,371,5,105,0,0,371,372,5,102,0,0,372,
        64,1,0,0,0,373,374,5,101,0,0,374,375,5,108,0,0,375,376,5,115,0,0,
        376,377,5,101,0,0,377,66,1,0,0,0,378,379,5,109,0,0,379,380,5,97,
        0,0,380,381,5,116,0,0,381,382,5,99,0,0,382,383,5,104,0,0,383,68,
        1,0,0,0,384,385,5,70,0,0,385,386,5,85,0,0,386,387,5,78,0,0,387,388,
        5,67,0,0,388,70,1,0,0,0,389,390,5,105,0,0,390,391,5,109,0,0,391,
        392,5,112,0,0,392,393,5,111,0,0,393,394,5,114,0,0,394,395,5,116,
        0,0,395,72,1,0,0,0,396,397,5,114,0,0,397,398,5,97,0,0,398,399,5,
        110,0,0,399,400,5,103,0,0,400,401,5,101,0,0,401,74,1,0,0,0,402,403,
        5,108,0,0,403,404,5,101,0,0,404,405,5,110,0,0,405,76,1,0,0,0,406,
        407,5,114,0,0,407,408,5,101,0,0,408,409,5,109,0,0,409,410,5,111,
        0,0,410,411,5,118,0,0,411,412,5,101,0,0,412,78,1,0,0,0,413,414,5,
        97,0,0,414,415,5,112,0,0,415,416,5,112,0,0,416,417,5,101,0,0,417,
        418,5,110,0,0,418,419,5,100,0,0,419,80,1,0,0,0,420,421,5,43,0,0,
        421,82,1,0,0,0,422,423,5,45,0,0,423,84,1,0,0,0,424,425,5,42,0,0,
        425,86,1,0,0,0,426,427,5,47,0,0,427,88,1,0,0,0,428,429,5,37,0,0,
        429,90,1,0,0,0,430,431,5,94,0,0,431,92,1,0,0,0,432,433,5,38,0,0,
        433,434,5,38,0,0,434,94,1,0,0,0,435,436,5,124,0,0,436,437,5,124,
        0,0,437,96,1,0,0,0,438,439,5,61,0,0,439,440,5,61,0,0,440,98,1,0,
        0,0,441,442,5,33,0,0,442,443,5,61,0,0,443,100,1,0,0,0,444,445,5,
        60,0,0,445,102,1,0,0,0,446,447,5,62,0,0,447,104,1,0,0,0,448,449,
        5,60,0,0,449,450,5,61,0,0,450,106,1,0,0,0,451,452,5,62,0,0,452,453,
        5,61,0,0,453,108,1,0,0,0,454,455,5,61,0,0,455,456,5,62,0,0,456,110,
        1,0,0,0,457,458,5,61,0,0,458,112,1,0,0,0,459,460,5,33,0,0,460,114,
        1,0,0,0,461,462,5,40,0,0,462,116,1,0,0,0,463,464,5,41,0,0,464,118,
        1,0,0,0,465,466,5,91,0,0,466,120,1,0,0,0,467,468,5,93,0,0,468,122,
        1,0,0,0,469,470,5,58,0,0,470,124,1,0,0,0,471,472,5,124,0,0,472,126,
        1,0,0,0,473,474,5,59,0,0,474,128,1,0,0,0,475,476,5,44,0,0,476,130,
        1,0,0,0,477,478,5,95,0,0,478,132,1,0,0,0,479,480,5,76,0,0,480,481,
        5,105,0,0,481,482,5,115,0,0,482,483,5,116,0,0,483,134,1,0,0,0,484,
        485,5,73,0,0,485,486,5,78,0,0,486,487,5,84,0,0,487,136,1,0,0,0,488,
        489,5,70,0,0,489,490,5,76,0,0,490,491,5,79,0,0,491,492,5,65,0,0,
        492,493,5,84,0,0,493,138,1,0,0,0,494,495,5,66,0,0,495,496,5,79,0,
        0,496,497,5,79,0,0,497,498,5,76,0,0,498,140,1,0,0,0,499,500,5,86,
        0,0,500,501,5,79,0,0,501,502,5,73,0,0,502,503,5,68,0,0,503,142,1,
        0,0,0,504,505,5,83,0,0,505,506,5,84,0,0,506,507,5,82,0,0,507,144,
        1,0,0,0,508,509,5,45,0,0,509,510,5,45,0,0,510,514,1,0,0,0,511,513,
        8,0,0,0,512,511,1,0,0,0,513,516,1,0,0,0,514,512,1,0,0,0,514,515,
        1,0,0,0,515,517,1,0,0,0,516,514,1,0,0,0,517,518,6,72,0,0,518,146,
        1,0,0,0,519,520,5,45,0,0,520,521,5,62,0,0,521,525,1,0,0,0,522,524,
        9,0,0,0,523,522,1,0,0,0,524,527,1,0,0,0,525,526,1,0,0,0,525,523,
        1,0,0,0,526,528,1,0,0,0,527,525,1,0,0,0,528,529,5,60,0,0,529,530,
        5,45,0,0,530,531,1,0,0,0,531,532,6,73,0,0,532,148,1,0,0,0,533,535,
        7,1,0,0,534,533,1,0,0,0,535,536,1,0,0,0,536,534,1,0,0,0,536,537,
        1,0,0,0,537,150,1,0,0,0,538,539,5,84,0,0,539,540,5,114,0,0,540,541,
        5,117,0,0,541,548,5,101,0,0,542,543,5,70,0,0,543,544,5,97,0,0,544,
        545,5,108,0,0,545,546,5,115,0,0,546,548,5,101,0,0,547,538,1,0,0,
        0,547,542,1,0,0,0,548,152,1,0,0,0,549,551,7,1,0,0,550,549,1,0,0,
        0,551,552,1,0,0,0,552,550,1,0,0,0,552,553,1,0,0,0,553,554,1,0,0,
        0,554,556,5,46,0,0,555,557,7,1,0,0,556,555,1,0,0,0,557,558,1,0,0,
        0,558,556,1,0,0,0,558,559,1,0,0,0,559,154,1,0,0,0,560,564,5,34,0,
        0,561,563,9,0,0,0,562,561,1,0,0,0,563,566,1,0,0,0,564,565,1,0,0,
        0,564,562,1,0,0,0,565,567,1,0,0,0,566,564,1,0,0,0,567,577,5,34,0,
        0,568,572,5,39,0,0,569,571,9,0,0,0,570,569,1,0,0,0,571,574,1,0,0,
        0,572,573,1,0,0,0,572,570,1,0,0,0,573,575,1,0,0,0,574,572,1,0,0,
        0,575,577,5,39,0,0,576,560,1,0,0,0,576,568,1,0,0,0,577,156,1,0,0,
        0,578,579,5,110,0,0,579,580,5,117,0,0,580,581,5,109,0,0,581,582,
        5,107,0,0,582,158,1,0,0,0,583,584,5,112,0,0,584,585,5,108,0,0,585,
        586,5,111,0,0,586,587,5,116,0,0,587,160,1,0,0,0,588,592,7,2,0,0,
        589,591,7,3,0,0,590,589,1,0,0,0,591,594,1,0,0,0,592,590,1,0,0,0,
        592,593,1,0,0,0,593,162,1,0,0,0,594,592,1,0,0,0,595,597,7,4,0,0,
        596,595,1,0,0,0,597,598,1,0,0,0,598,596,1,0,0,0,598,599,1,0,0,0,
        599,600,1,0,0,0,600,601,6,81,0,0,601,164,1,0,0,0,12,0,514,525,536,
        547,552,558,564,572,576,592,598,1,6,0,0
    ]

class Kafe_GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    INT_CAST = 23
    FLOAT_CAST = 24
    STR_CAST = 25
    BOOL_CAST = 26
    DRIP = 27
    POUR = 28
    SHOW = 29
    RETURN = 30
    IF = 31
    ELIF = 32
    ELSE = 33
    MATCH = 34
    FUNC = 35
    IMPORT = 36
    RANGE = 37
    LEN = 38
    REMOVE = 39
    APPEND = 40
    ADD = 41
    SUB = 42
    MUL = 43
    DIV = 44
    MOD = 45
    POW = 46
    AND = 47
    OR = 48
    EQ = 49
    NEQ = 50
    LT = 51
    GT = 52
    LE = 53
    GE = 54
    ARROW = 55
    ASSIGN = 56
    NOT = 57
    LPAREN = 58
    RPAREN = 59
    LBRACK = 60
    RBRACK = 61
    COLON = 62
    PIPE = 63
    SEMI = 64
    COMMA = 65
    UNDERSCORE = 66
    LIST = 67
    INT_TYPE = 68
    FLOAT_TYPE = 69
    BOOL_TYPE = 70
    VOID_TYPE = 71
    STRING_TYPE = 72
    LINE_COMMENT = 73
    BLOCK_COMMENT = 74
    INT = 75
    BOOL = 76
    FLOAT = 77
    STRING = 78
    NUMK_LIB = 79
    PLOT_LIB = 80
    ID = 81
    WS = 82

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'while'", "'for'", "'in'", "'.graph'", "'.xlabel'", "'.ylabel'", 
            "'.title'", "'.grid'", "'.color'", "'.pointColor'", "'.pointSize'", 
            "'.legend'", "'.bar'", "'.barValues'", "'.pie'", "'.add'", "'.sub'", 
            "'.mul'", "'.inv'", "'.transpose'", "'files.open'", "'math.sin'", 
            "'int'", "'float'", "'str'", "'bool'", "'drip'", "'pour'", "'show'", 
            "'return'", "'if'", "'elif'", "'else'", "'match'", "'FUNC'", 
            "'import'", "'range'", "'len'", "'remove'", "'append'", "'+'", 
            "'-'", "'*'", "'/'", "'%'", "'^'", "'&&'", "'||'", "'=='", "'!='", 
            "'<'", "'>'", "'<='", "'>='", "'=>'", "'='", "'!'", "'('", "')'", 
            "'['", "']'", "':'", "'|'", "';'", "','", "'_'", "'List'", "'INT'", 
            "'FLOAT'", "'BOOL'", "'VOID'", "'STR'", "'numk'", "'plot'" ]

    symbolicNames = [ "<INVALID>",
            "INT_CAST", "FLOAT_CAST", "STR_CAST", "BOOL_CAST", "DRIP", "POUR", 
            "SHOW", "RETURN", "IF", "ELIF", "ELSE", "MATCH", "FUNC", "IMPORT", 
            "RANGE", "LEN", "REMOVE", "APPEND", "ADD", "SUB", "MUL", "DIV", 
            "MOD", "POW", "AND", "OR", "EQ", "NEQ", "LT", "GT", "LE", "GE", 
            "ARROW", "ASSIGN", "NOT", "LPAREN", "RPAREN", "LBRACK", "RBRACK", 
            "COLON", "PIPE", "SEMI", "COMMA", "UNDERSCORE", "LIST", "INT_TYPE", 
            "FLOAT_TYPE", "BOOL_TYPE", "VOID_TYPE", "STRING_TYPE", "LINE_COMMENT", 
            "BLOCK_COMMENT", "INT", "BOOL", "FLOAT", "STRING", "NUMK_LIB", 
            "PLOT_LIB", "ID", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "INT_CAST", "FLOAT_CAST", "STR_CAST", 
                  "BOOL_CAST", "DRIP", "POUR", "SHOW", "RETURN", "IF", "ELIF", 
                  "ELSE", "MATCH", "FUNC", "IMPORT", "RANGE", "LEN", "REMOVE", 
                  "APPEND", "ADD", "SUB", "MUL", "DIV", "MOD", "POW", "AND", 
                  "OR", "EQ", "NEQ", "LT", "GT", "LE", "GE", "ARROW", "ASSIGN", 
                  "NOT", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "COLON", 
                  "PIPE", "SEMI", "COMMA", "UNDERSCORE", "LIST", "INT_TYPE", 
                  "FLOAT_TYPE", "BOOL_TYPE", "VOID_TYPE", "STRING_TYPE", 
                  "LINE_COMMENT", "BLOCK_COMMENT", "INT", "BOOL", "FLOAT", 
                  "STRING", "NUMK_LIB", "PLOT_LIB", "ID", "WS" ]

    grammarFileName = "Kafe_Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


